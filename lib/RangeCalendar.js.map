{"version":3,"sources":["RangeCalendar.js"],"names":["DateTime","cx","RangeCalendar","props","context","begin","end","value","state","open","date","getNormalizeValue","onLabelClick","bind","onConfirm","onCancel","onDateChange","length","Date","parseDate","valueBegin","valueEnd","isAfterDate","isBeforeDate","stringifyValue","map","formatDate","disabled","readOnly","setState","index","e","concat","isEqualDate","onChange","type","target","format","dateFormat","parse","renderHiddenInput","name","join","render","lang","size","placeholder","others","className","addStates","focus","getStyleStates","build","part","displayName","defaultProps","defaultValue","propTypes","arrayOf","string","autoOk","bool","oneOfType","object","childContextTypes","contextTypes"],"mappings":"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","file":"RangeCalendar.js","sourcesContent":["/**\n * @file melon/RangeCalendar\n * @author cxtom <cxtom2008@gmail.com>\n *         leon <ludafa@outlook.com>\n */\n\nimport React, {PropTypes} from 'react';\n\nimport {create} from 'melon-core/classname/cxBuilder';\nimport InputComponent from 'melon-core/InputComponent';\n\nimport Icon from 'melon/Icon';\nimport Confirm from 'melon/Confirm';\n\nimport Calendar from './Calendar';\nimport Panel from './calendar/Panel';\nimport * as DateTime from './util';\nimport omit from 'lodash/omit';\n\nconst cx = create('RangeCalendar');\n\n/**\n * melon 日期区间选择器\n *\n * @class\n * @extends {melon-core/InputComponent}\n */\nexport default class RangeCalendar extends InputComponent {\n\n    /**\n     * 构造函数\n     *\n     * @param  {Object} props   组件属性\n     * @param  {Object} context 组件上下文\n     * @public\n     */\n    constructor(props, context) {\n\n        super(props, context);\n\n        const {begin, end} = props;\n\n        const value = this.state.value;\n\n        /**\n         * 组件状态\n         *\n         * @type {Object}\n         */\n        this.state = {\n            ...this.state,\n            open: false,\n            date: this.getNormalizeValue(value, begin, end)\n        };\n\n        this.onLabelClick = this.onLabelClick.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onLabelClick = this.onLabelClick.bind(this);\n        this.onCancel = this.onCancel.bind(this);\n        this.onDateChange = this.onDateChange.bind(this);\n    }\n\n    /**\n     * 获取过滤后的日期对象区间\n     *\n     * @param  {Array<string>} value 时间区间值\n     * @param  {string|Date}   begin 范围最新值\n     * @param  {string|Date}   end   范围最大值\n     * @return {Array<Date>}         日期对象区间\n     * @private\n     */\n    getNormalizeValue(value, begin, end) {\n\n        if (value.length === 0) {\n            return [new Date(), new Date()];\n        }\n\n        begin = this.parseDate(begin);\n        end = this.parseDate(end);\n\n        let valueBegin = this.parseDate(value[0]);\n        let valueEnd = this.parseDate(value[1]);\n\n        // 这里我们需要一个全新的 value\n        value = [\n            begin && DateTime.isAfterDate(begin, valueBegin) ? begin : valueBegin,\n            end && DateTime.isBeforeDate(end, valueEnd) ? end : valueEnd\n        ];\n\n        return value;\n\n    }\n\n    /**\n     * 格式化日期区间\n     *\n     * @param {Array<Date>} date 源日期对象\n     * @return {Array<string>} 格式化后的日期字符串\n     * @private\n     */\n    stringifyValue(date) {\n        return date.map(date => this.formatDate(date));\n    }\n\n    /**\n     * 点击 Label 时触发，打开浮层\n     *\n     * @private\n     */\n    onLabelClick() {\n\n        const {\n            disabled,\n            readOnly\n        } = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        this.setState({open: true});\n    }\n\n    /**\n     * 点击取消时触发\n     *\n     * @private\n     */\n    onCancel() {\n        this.setState({\n            open: false\n        });\n    }\n\n    /**\n     * CalendarPanel 日期变更时触发\n     * 当属性 autoConfirm 为 true 时，自动执行 onConfirm\n     *\n     * @param {number} index   0 - 开始时间改变， 1 - 结束时间改变\n     * @param {Object} e       事件对象\n     * @param {Date}   e.value 改变后的日期值\n     * @private\n     */\n    onDateChange(index, e) {\n\n        const value = e.value;\n\n        let date = [].concat(this.state.date);\n\n        date[index] = value;\n\n        this.setState({\n            date\n        });\n    }\n\n    /**\n     * 在浮层上点击确定按钮时触发\n     *\n     * @private\n     */\n    onConfirm() {\n\n        const {date, value} = this.state;\n\n        // 不管怎么样，先把窗口关了\n        this.setState({\n            open: false\n        }, () => {\n\n            // 如果值发生了变化，那么释放一个 change 事件\n            if (\n                !DateTime.isEqualDate(date[0], this.parseDate(value[0]))\n                || !DateTime.isEqualDate(date[1], this.parseDate(value[1]))\n            ) {\n                super.onChange({\n                    type: 'change',\n                    target: this,\n                    value: date.map(this.formatDate, this)\n                });\n            }\n\n        });\n\n    }\n\n    /**\n     * 按设置格式化日期\n     *\n     * @param {Date} date 日期\n     * @return {string}\n     * @private\n     */\n    formatDate(date) {\n\n        return DateTime.format(\n            date,\n            this.props.dateFormat\n        );\n    }\n\n    /**\n     * 格式化日期对象\n     *\n     * @param  {string} date  日期字符串\n     * @return {Date}         转化后的日期对象\n     * @private\n     */\n    parseDate(date) {\n\n        if (typeof date !== 'string') {\n            return date;\n        }\n\n        let format = this.props.dateFormat;\n\n        return DateTime.parse(date, format);\n    }\n\n    /**\n     * 渲染input\n     *\n     * @protected\n     * @return {ReactElement}\n     */\n    renderHiddenInput() {\n\n        const {name, value} = this.props;\n\n        return name\n            ? (\n                <input\n                    name={name}\n                    type=\"hidden\"\n                    value={value.join(',')} />\n            )\n            : null;\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {React.Element}\n     */\n    render() {\n\n        const props = this.props;\n\n        let {\n            lang,\n            disabled,\n            readOnly,\n            size,\n            begin,\n            end,\n            placeholder,\n            ...others\n        } = props;\n\n        const {open, date, value} = this.state;\n\n        begin = begin ? this.parseDate(begin) : null;\n        end = end ? this.parseDate(end) : null;\n\n        const className = cx(props)\n            .addStates({focus: open})\n            .addStates(this.getStyleStates())\n            .build();\n\n        return (\n            <div\n                {...omit(others, ['dateFormat', 'name', 'autoConfirm', 'variants', 'states'])}\n                className={className}>\n                {this.renderHiddenInput()}\n                <label onClick={(disabled || readOnly) ? null : this.onLabelClick}>\n                    {value.length === 0\n                        ? (\n                            <span className={cx().part('label-placeholder').build()}>\n                                {placeholder}\n                            </span>\n                        ) : `${value[0]} 至 ${value[1]}`\n                    }\n                    <Icon icon='expand-more' />\n                </label>\n                <Confirm\n                    open={open}\n                    variants={['calendar', 'range']}\n                    onConfirm={this.onConfirm}\n                    onCancel={this.onCancel}\n                    size={size}\n                    buttonVariants={['secondery', 'calendar']} >\n                    <div className={cx().part('row').build()}>\n                        <Panel\n                            lang={lang}\n                            date={date[0]}\n                            begin={begin}\n                            end={date[1] || new Date()}\n                            onChange={this.onDateChange.bind(this, 0)} />\n                        <Panel\n                            lang={lang}\n                            date={date[1]}\n                            begin={date[0] || new Date()}\n                            end={end}\n                            onChange={this.onDateChange.bind(this, 1)} />\n                    </div>\n                </Confirm>\n            </div>\n        );\n\n    }\n\n}\n\nRangeCalendar.displayName = 'RangeCalendar';\n\nRangeCalendar.defaultProps = {\n    ...Calendar.defaultProps,\n    defaultValue: [],\n    placeholder: '请选择'\n};\n\nRangeCalendar.propTypes = {\n    ...Calendar.propTypes,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    value: PropTypes.arrayOf(PropTypes.string),\n    autoOk: PropTypes.bool,\n    dateFormat: PropTypes.string,\n    begin: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ]),\n    end: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ])\n};\n\nRangeCalendar.childContextTypes = InputComponent.childContextTypes;\n\nRangeCalendar.contextTypes = InputComponent.contextTypes;\n"]}