{"version":3,"sources":["util.js"],"names":["isDate","addDays","addMonths","getDaysInMonth","getFirstDayOfMonth","getShortMonth","getDayOfWeek","getFullWeekArray","parse","format","isEqualDate","isBeforeDate","isAfterDate","isEqualMonth","isBeforeMonth","isAfterMonth","monthDiff","yearDiff","date","Date","d","days","add","toDate","months","resultDate","setMonth","getMonth","setDate","getDate","month","dow","getDay","lang","daysInMonth","firstDay","firstDayOfWeek","day","i","push","variants","lastDay","length","lastDayOfWeek","weeks","slice","value","d1","d2","isSame","isBefore","isAfter","m","getFullYear"],"mappings":"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","file":"util.js","sourcesContent":["/**\n * @file melon date tools\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport moment from 'moment';\n\n/**\n * 是否为 Date 实例\n *\n * @param {Date} date 一个对象\n * @return {boolean}\n */\nexport function isDate(date) {\n    return date instanceof Date;\n}\n\n/**\n * 增加N天后的日期\n *\n * @param  {Date}   d    日期对象\n * @param  {number} days 增加的天数\n * @return {Date}   修改后的日期\n */\nexport function addDays(d, days) {\n    if (days === 0) {\n        return d;\n    }\n    return moment(d).add(days, 'days').toDate();\n}\n\n/**\n * 增加N月后的日期\n *\n * @param  {Date}   d      日期对象\n * @param  {number} months 增加的月份数\n * @return {Date}   修改后的日期对象\n */\nexport function addMonths(d, months) {\n    return moment(d).add(months, 'months').toDate();\n}\n\n/**\n * 获取某一月的天数\n *\n * @param  {Date} d   日期\n * @return {number}   当月的天数\n */\nexport function getDaysInMonth(d) {\n    const resultDate = this.getFirstDayOfMonth(d);\n\n    resultDate.setMonth(resultDate.getMonth() + 1);\n    resultDate.setDate(resultDate.getDate() - 1);\n\n    return resultDate.getDate();\n}\n\n/**\n * 获取某月第一天的日期对象\n *\n * @param  {Date} d Date对象\n * @return {Date}   当月第一天日期\n */\nexport function getFirstDayOfMonth(d) {\n    return moment(d).date(1).toDate();\n}\n\n/**\n * 获取月份字符串\n *\n * @param  {Date} d 日期\n * @return {string}\n */\nexport function getShortMonth(d) {\n    const month = d.getMonth();\n    return (month + 1) + '月';\n}\n\n/**\n * 获取星期字符串\n *\n * @param  {Date} d 日期\n * @return {string}\n */\nexport function getDayOfWeek(d) {\n    const dow = d.getDay();\n    const lang = ['日', '一', '二', '三', '四', '五', '六'];\n    return '星期' + lang[dow];\n}\n\n/**\n * 得到某一月所有天数按周组成若干个数组\n * 第一周和最后一周不在本月的天数\n *\n * @param  {Date} d 日期\n * @return {Array}  数据\n */\nexport function getFullWeekArray(d) {\n\n    const daysInMonth = this.getDaysInMonth(d);\n    const firstDay = this.getFirstDayOfMonth(d);\n\n    const firstDayOfWeek = moment(firstDay).day();\n\n    let days = [];\n    let i;\n\n    if (firstDayOfWeek > 1) {\n        for (i = firstDayOfWeek - 1; i >= 0; i--) {\n            days.push({\n                date: this.addDays(firstDay, -(i + 1)),\n                variants: 'pre-month'\n            });\n        }\n    }\n\n    for (i = 0; i < daysInMonth; i++) {\n        days.push({\n            date: this.addDays(firstDay, i)\n        });\n    }\n\n    const lastDay = days[days.length - 1].date;\n    const lastDayOfWeek = moment(lastDay).day();\n\n    if (lastDayOfWeek < 7) {\n        for (i = 0; i < 6 - lastDayOfWeek; i++) {\n            days.push({\n                date: this.addDays(lastDay, i + 1),\n                variants: 'next-month'\n            });\n        }\n    }\n\n    let weeks = [];\n\n    for (i = 0; i < days.length / 7; i++) {\n        weeks.push(days.slice(i * 7, (i + 1) * 7));\n    }\n\n    return weeks;\n\n}\n\n/**\n * 字符串转日期\n *\n * @param  {string} value  日期字符串\n * @param  {string} format 转换格式\n * @return {Date}          Date对象\n */\nexport function parse(value, format) {\n    return moment(value, format).toDate();\n}\n\n/**\n * 日期转字符串\n *\n * @param  {Date}   date   日期\n * @param  {string} format 转换格式\n * @return {string}        转换以后的日期\n */\nexport function format(date, format) {\n    return moment(date).format(format);\n}\n\n/**\n * 判断两个日期对象是否为同一天\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {boolean}  是否为同一天\n */\nexport function isEqualDate(d1, d2) {\n    return moment(d1).isSame(d2, 'date')\n        && moment(d1).isSame(d2, 'month')\n        && moment(d1).isSame(d2, 'year');\n}\n\n/**\n * 判断两个日期对象的大小\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {boolean}  d1 < d2\n */\nexport function isBeforeDate(d1, d2) {\n    return moment(d1).isBefore(d2, 'date');\n}\n\n/**\n * 判断两个日期对象的大小\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {boolean}  d1 > d2\n */\nexport function isAfterDate(d1, d2) {\n    return moment(d1).isAfter(d2, 'date');\n}\n\n/**\n * 判断两个日期对象是否在同一个月\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {boolean}  d1 = d2\n */\nexport function isEqualMonth(d1, d2) {\n    return moment(d1).isSame(d2, 'month')\n        && moment(d1).isSame(d2, 'year');\n}\n\n/**\n * 判断两个日期对象大小\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {boolean}  d1 < d2\n */\nexport function isBeforeMonth(d1, d2) {\n    return moment(d1).isBefore(d2, 'month');\n}\n\n\n/**\n * 判断两个日期对象大小\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {boolean}  d1 > d2\n */\nexport function isAfterMonth(d1, d2) {\n    return moment(d1).isAfter(d2, 'month');\n}\n\n/**\n * 判断日期之间相差的月数\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {number} 相差的月数\n */\nexport function monthDiff(d1, d2) {\n    let m = (d1.getFullYear() - d2.getFullYear()) * 12;\n    m += d1.getMonth();\n    m -= d2.getMonth();\n    return m;\n}\n\n/**\n * 判断日期之间相差的年数\n *\n * @param  {Date}  d1 日期1\n * @param  {Date}  d2 日期2\n * @return {number} 相差的年数\n */\nexport function yearDiff(d1, d2) {\n    return ~~(this.monthDiff(d1, d2) / 12);\n}\n"]}