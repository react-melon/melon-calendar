{"version":3,"sources":["calendar/Month.js"],"names":["DateTime","cx","CalendarMonth","props","onClick","bind","renderWeek","renderDay","e","onChange","target","date","renderWeekHeader","days","lang","split","getPartClassName","map","day","index","renderDates","month","weekArray","getFullWeekArray","week","part","build","minDate","maxDate","selected","isEqualDate","disabled","isDate","isBeforeDate","isAfterDate","variants","render","displayName","propTypes","object","isRequired","func","shape","string"],"mappings":"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","file":"Month.js","sourcesContent":["/**\n * @file CalendarMonth\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport React, {Component, PropTypes} from 'react';\nimport {create} from 'melon-core/classname/cxBuilder';\nimport Day from './Day';\nimport * as DateTime from '../util';\n\nconst cx = create('CalendarMonth');\n\n/**\n * melon-calendar 日期选择面板\n *\n * @class\n * @extends {React.Component}\n */\nexport default class CalendarMonth extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @param  {Object} props   组件属性\n     * @public\n     */\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n        this.renderWeek = this.renderWeek.bind(this);\n        this.renderDay = this.renderDay.bind(this);\n    }\n\n    /**\n     * 点击某一天的按钮时触发\n     *\n     * @param  {Object} e 事件对象\n     */\n    onClick(e) {\n        const onChange = this.props.onChange;\n        if (onChange) {\n            onChange({\n                target: this,\n                date: e.date\n            });\n        }\n    }\n\n    /**\n     * 星期头渲染\n     *\n     * @return {React.Element}\n     */\n    renderWeekHeader() {\n        const days = this.props.lang.days.split(',');\n\n        return (\n            <div className={cx.getPartClassName('weekheader')}>\n                {days.map(function (day, index) {\n                    return <span key={index}>{day}</span>;\n                })}\n            </div>\n        );\n    }\n\n    /**\n     * 一个月\n     *\n     * @return {React.Element}\n     */\n    renderDates() {\n\n        const month = this.props.month;\n\n        const weekArray = DateTime.getFullWeekArray(month);\n\n        return (<ul>{weekArray.map(this.renderWeek)}</ul>);\n    }\n\n    /**\n     * 渲染一周\n     *\n     * @param  {Array<Date>} week  一周的日期数组\n     * @param  {number}      index 索引\n     * @return {React.Element}\n     */\n    renderWeek(week, index) {\n\n        return (\n            <li key={index} className={cx().part('week').build()}>\n                {week.map(this.renderDay)}\n            </li>\n        );\n    }\n\n    /**\n     * 渲染一天\n     *\n     * @param  {Date} day    日期\n     * @param  {number}      index 索引\n     * @return {React.Element}\n     */\n    renderDay(day, index) {\n\n        const {\n            date,\n            minDate,\n            maxDate\n        } = this.props;\n\n        const selected = DateTime.isEqualDate(day.date, date);\n        const disabled = (DateTime.isDate(minDate) && DateTime.isBeforeDate(day.date, minDate))\n                        || (DateTime.isDate(maxDate) && DateTime.isAfterDate(day.date, maxDate));\n\n        return (\n            <Day\n                key={day.date}\n                date={day.date}\n                variants={day.variants}\n                disabled={disabled}\n                selected={selected}\n                onClick={this.onClick} />\n        );\n\n    }\n\n    /**\n     * 渲染\n     *\n     * @public\n     * @return {React.Element}\n     */\n    render() {\n\n        return (\n            <div className={cx(this.props).build()}>\n                {this.renderWeekHeader()}\n                {this.renderDates()}\n            </div>\n        );\n    }\n\n}\n\nCalendarMonth.displayName = 'CalendarMonth';\n\nCalendarMonth.propTypes = {\n    date: PropTypes.object.isRequired,\n    month: PropTypes.object.isRequired,\n    maxDate: PropTypes.object,\n    minDate: PropTypes.object,\n    onChange: PropTypes.func,\n    lang: PropTypes.shape({\n        week: PropTypes.string,\n        days: PropTypes.string\n    }).isRequired\n};\n"]}