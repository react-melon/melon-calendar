{"version":3,"sources":["calendar/Item.js"],"names":["Item","props","onClick","bind","shouldComponentUpdate","nextProps","disabled","selected","e","preventDefault","date","mode","target"],"mappings":";;;;;;;;;;;;;;;;;QAcqBA,I;;;AAEjB;;;;;;AAMA,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,qEACf,sBAAMA,KAAN,CADe;;AAEf,kBAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,OAAf;AAFe;AAGlB;;AAED;;;;;;;;;uBAOAC,qB,kCAAsBC,S,EAAW;AAAA,yBAKzB,KAAKJ,KALoB;AAAA,gBAGzBK,QAHyB,UAGzBA,QAHyB;AAAA,gBAIzBC,QAJyB,UAIzBA,QAJyB;;;AAO7B,mBAAOF,UAAUC,QAAV,KAAuBA,QAAvB,IACAD,UAAUE,QAAV,KAAuBA,QAD9B;AAGH,S;;uBAQDL,O,oBAAQM,C,EAAG;;AAEPA,cAAEC,cAAF;;AAFO,0BASH,KAAKR,KATF;AAAA,gBAKHK,QALG,WAKHA,QALG;AAAA,gBAMHJ,OANG,WAMHA,OANG;AAAA,gBAOHQ,IAPG,WAOHA,IAPG;AAAA,gBAQHC,IARG,WAQHA,IARG;;;AAWP,gBAAIL,QAAJ,EAAc;AACV;AACH;;AAED,gBAAIJ,OAAJ,EAAa;;AAET,oBAAIM,KAAI;AACJI,4BAAQ,IADJ;AAEJF,0BAAMA;AAFF,iBAAR;;AAKA,oBAAIC,IAAJ,EAAU;AACNH,uBAAEG,IAAF,GAASA,IAAT;AACH;;AAEDT,wBAAQM,EAAR;AACH;AACJ,S;;;;;yBAlEgBR,I","file":"Item.js","sourcesContent":["/**\n * @file CalendarItemMixin\n * @author cxtom(cxtom2008@gmail.com)\n */\n\nimport {Component} from 'react';\n\n\n/**\n * melon-calendar 选择单元基类\n *\n * @class\n * @extends {React.Component}\n */\nexport default class Item extends Component {\n\n    /**\n     * 构造函数\n     *\n     * @param  {Object} props   组件属性\n     * @public\n     */\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    /**\n     * 判断是否需要更新，性能优化\n     *\n     * @param  {Object} nextProps  组件新的属性\n     * @return {bool}  是否需要更新\n     * @public\n     */\n    shouldComponentUpdate(nextProps) {\n\n        const {\n            disabled,\n            selected\n        } = this.props;\n\n        return nextProps.disabled !== disabled\n            || nextProps.selected !== selected;\n\n    }\n\n    /**\n     * 点击时触发\n     *\n     * @param  {Object} e  事件对象\n     * @private\n     */\n    onClick(e) {\n\n        e.preventDefault();\n\n        const {\n            disabled,\n            onClick,\n            date,\n            mode\n        } = this.props;\n\n        if (disabled) {\n            return;\n        }\n\n        if (onClick) {\n\n            let e = {\n                target: this,\n                date: date\n            };\n\n            if (mode) {\n                e.mode = mode;\n            }\n\n            onClick(e);\n        }\n    }\n\n}\n"]}